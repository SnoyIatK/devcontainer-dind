// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/dotnet
{
  "name": "C# (.NET) - Docker in/from Docker/Compose",
  // Uncomment the below lines to use Dockerfile only
  // "build": {
  //   "dockerfile": "debian.Dockerfile",
  //   "args": {
  //     // Update 'VARIANT' to pick a .NET Core version: 2.1, 3.1, 5.0
  //     "VARIANT": "3.1",
  //     // Options
  //     "INSTALL_NODE": "true",
  //     "NODE_VERSION": "lts/*",
  //     "INSTALL_AZURE_CLI": "false",
  //     "USE_DIND": "false"
  //   }
  // },
  // "runArgs": ["--init", "--privileged"],
  // "mounts": ["source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"],
  // "overrideCommand": false,

  "dockerComposeFile": "docker-compose.yml",
  "service": "dev-dfd", // Use dev-dind or dev-dfd
  "workspaceFolder": "/workspace",

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-dotnettools.csharp",
    "mhutchie.git-graph",
    "eamodio.gitlens",
    "ms-azuretools.vscode-azurestorage",
    "quicktype.quicktype",
    "esbenp.prettier-vscode",
    "ms-azuretools.vscode-docker"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [5000, 5001],

  // [Optional] To reuse of your local HTTPS dev cert:
  //
  // 1. Export it locally using this command:
  //    * Windows PowerShell:
  //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //    * macOS/Linux terminal:
  //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //
  // 2. Uncomment these 'remoteEnv' lines:
  //    "remoteEnv": {
  // 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
  //        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
  //    },
  //
  // 3. Do one of the following depending on your scenario:
  //    * When using GitHub Codespaces and/or Remote - Containers:
  //      1. Start the container
  //      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
  //      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
  //
  //    * If only using Remote - Containers with a local container, uncomment this line instead:
  //      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "dotnet restore",
  // TODO: Enable for dind
  // "postCreateCommand": "dockerd-entrypoint.sh --experimental &",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  // TODO: change to rootless for dind
  "remoteUser": "vscode"
}
